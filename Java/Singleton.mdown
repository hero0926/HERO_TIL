# singletone pattern

---

## 하나의 객체만 생성하고 사용해야 할 때 > 하나의 인스턴스만 생성하고 사용

### 인스턴스가 사용될 때 동일 인스턴스를 사용하게 하는 패턴!

---

#### 예제

```
//Main.java

package pattern.Singleton;

public Class Main{
	
	// 싱글톤 패턴 없이는
	Singletone singleton1 = new Singleton();
	Singletone singleton2 = new Singleton();

	// 이 두 객체 ID가 다름(둘다 다른 객체!)
}
```

```
//Main.java

package pattern.Singleton;

public Class Main{
	
	// 싱글톤 패턴을 적용해 보자!
	Singletone singleton1 = Singleton.getInstance()
	Singletone singleton2 = Singleton.getInstance()

	// 이 두 객체 ID가 같음. 객체가 비어있다면 최초로 객체 생성 후 반환
}
```

```
//Singletone.java

package pattern.Singleton;

pubilc class Singleton{
	

	private static Singletone singleton;

	public static Singletone getInstance(){

		if(singleton == null){
			// 생성된 게 없을때는
			singleton = new Singleton();
			return singleton;
			//생성 후 반환하고
		}else{
			return singleton;
			//아니면 있는거 반환
		}

	}

}
```

