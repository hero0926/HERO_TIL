# 최대공약수 구하기

# 최대공약수란 두 개 이상의 정수의 공통 약수 중에서 가장 큰 값
# 두 수의 약수 중 공통된 것을 찾아 최댓값을 반환하자!

# 내 답 씨발놈들아 모른다!!!!

# 최대공약수

def gcd(a, b) :
    i = min(a,b) #두 수 중 최솟값 구하기
    while True :
        if a % i == 0 and b % i == 0 :
            return i # 얘가 약수
    i = i-1


# 유..클리드...알...고리즘. ... 다토 . .. .?
# 재귀 호출을 이용해서 구할 수 있엉!
# a와 b의 최대공약수는 b랑 + a를 b로 나눈 나머지의 최대공약수랑 같다!
# 즉 gcd(a,b) 가 gcd(b, a%b)랑 같다!
# 0이랑의 최대공약수는 자기 자신! gcd(n, 0) = n

def uclid(a, b) :
    if b == 0 :
        return a

    return uclid(b, b%a)

# 0과 1부터 시작해서 바로 앞의 두 수를 더한 값을 다음 값으로.. 뭐 씨발 피보수열
# 피보 수열이 0부터 시작한다고 가정할 때 n번째 피보나치 수를 구하는 알고리즘을
# 재 귀 를 써서 구현해 보세요
# 힌트 : 7번 값 = 5번 값 + 6번 값

def fivo(n) :

    if n== 1 :
        return 1

    return fivo(n-2) + fivo(n-1)


